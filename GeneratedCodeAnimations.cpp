// GENERATED CODE. DO NOT CHANGE
// Trigger animations automatically using the configuration in the app, or callbacks in the BottangoArduinoCallbacks.cpp file
// Look at the method "onLateLoop" in the callbacks file for examples

// Animation Index Key:
// 0: Default Pose
// 1: vestizione
// 2: loop da fiera
// 3: esperience
// 4: loop parlato
// 5: sarlac
// 6: rancor
// 7: Prova


// !!! Do not change the below, unless you know what you are doing.
// !!!
// !!!


#include "GeneratedCodeAnimations.h"
#include "src/CodeCommandStreamDataSource.h"

namespace GeneratedCodeAnimations
{
    // setup
    const char SETUP_DATA_0[] PROGMEM = "rSVPin,25,800,2100,3000,800\nrSVPin,33,1220,2200,3000,2053\nrSVPin,32,1100,1700,3000,1400\nrSVPin,14,1100,2100,3000,2100\nrSVPin,27,400,1500,3000,565\nrSVPin,26,1100,1700,3000,1400\n";
    const char *const SETUP_DATAARRAY[] PROGMEM = {SETUP_DATA_0};

    // animation 0, "Default Pose"
    const char ANIM_0_DATA0[] PROGMEM = "sC,14,0,1000,8192,250,0,8192,-250,0\nsC,27,0,1000,1229,250,0,1229,-250,0\nsC,26,0,1000,4096,250,0,4096,-250,0\nsC,32,0,1000,4096,250,0,4096,-250,0\nsC,25,0,1000,0,250,0,0,-250,0\nsC,33,0,1000,6963,250,0,6963,-250,0\n\n";
    const char *const ANIM_0_DATAARRAY[] PROGMEM = {ANIM_0_DATA0};
    const char ANIM_0_LOOP[] PROGMEM = "";
    const uint16_t ANIM_0_CONFIG[] PROGMEM = {1, 0, 0, 0, 0, 0, 0, 0};

    // animation 1, "vestizione"
    const char ANIM_1_DATA0[] PROGMEM = "sC,14,0,1000,0,250,0,0,-250,0\nsC,25,0,1000,8192,250,0,8192,-250,0\n\n";
    const char *const ANIM_1_DATAARRAY[] PROGMEM = {ANIM_1_DATA0};
    const char ANIM_1_LOOP[] PROGMEM = "";
    const uint16_t ANIM_1_CONFIG[] PROGMEM = {0, 0, 0, 0, 0, 0, 0, 0};

    // animation 2, "loop da fiera"
    const char ANIM_2_DATA0[] PROGMEM = "sC,32,0,3933,3475,983,0,4006,-983,0\nsC,33,0,4067,4096,1017,0,4635,-1017,0\nsC,25,0,4100,0,1025,0,709,-1025,0\nsC,14,0,4033,8192,1008,0,7454,-1008,0\nsC,27,0,4167,4096,1042,0,2798,-1042,0\nsC,26,0,2300,4681,567,0,5541,-845,47\nsC,26,2300,1767,5541,671,-37,4509,-450,0\nsC,32,3933,2300,4006,575,0,4081,-575,0\nsC,14,4033,2200,7454,550,0,7001,-550,0\nsC,26,4067,2600,4509,650,0,4786,-650,0\nsC,33,4067,2466,4635,617,0,5037,-617,0\nsC,25,4100,2233,709,558,0,406,-558,0\nsC,27,4167,1966,2798,492,0,2445,-492,0\nsC,27,6133,2134,2445,533,0,3049,-533,0\nsC,32,6233,2067,4081,517,0,4030,-517,0\nsC,14,6233,2334,7001,583,0,7605,-583,0\nsC,25,6333,1900,406,475,0,834,-475,0\nsC,33,6533,1800,5037,450,0,4887,-450,0\nsC,26,6667,9366,4786,2342,0,4081,-2342,0\nsC,25,8233,5467,834,1367,0,1488,-1367,0\nsC,27,8267,6100,3049,1525,0,1841,-1525,0\nsC,32,8300,5300,4030,1325,0,3678,-1325,0\nsC,33,8333,5167,4887,1292,0,4408,-1292,0\nsC,14,8567,7433,7605,1858,0,6749,-1858,0\nsC,33,13500,2433,4408,608,0,4131,-608,0\nsC,32,13600,3933,3678,983,0,3225,-983,0\nsC,25,13700,2300,1488,575,0,784,-575,0\nsC,27,14367,5633,1841,1408,0,4096,-1408,0\nsC,33,15933,1434,4131,358,0,5390,-358,0\nsC,25,16000,2000,784,500,0,1690,-500,0\nsC,14,16000,1900,6749,475,0,5541,-475,0\nsC,26,16033,1600,4081,400,0,3553,-400,0\nsC,33,17367,2633,5390,658,0,4096,-658,0\nsC,32,17533,2467,3225,617,0,3441,-617,0\nsC,26,17633,1467,3553,367,0,4584,-367,0\nsC,14,17900,2067,5541,517,0,7882,-517,0\nsC,25,18000,2000,1690,500,0,0,-500,0\nsC,26,19100,900,4584,225,0,4685,-225,0\nsC,14,19967,33,7882,8,0,8192,-8,0\n\n";
    const char *const ANIM_2_DATAARRAY[] PROGMEM = {ANIM_2_DATA0};
    const char ANIM_2_LOOP[] PROGMEM = "sC,32,20000,2,3441,1,0,3475,-1,0\nsC,26,20000,0,4685,0,0,4681,0,0\n";
    const uint16_t ANIM_2_CONFIG[] PROGMEM = {0, 0, 0, 0, 0, 0, 0, 0};

    // animation 3, "esperience"
    const char ANIM_3_DATA0[] PROGMEM = "sC,26,0,1967,4681,492,0,4107,-492,27\nsC,27,0,4000,4096,1000,0,0,-1000,0\nsC,14,0,1567,8192,392,0,1967,-392,0\nsC,32,0,3733,3475,933,0,4728,-933,0\nsC,33,0,2267,4096,567,0,0,-567,0\nsC,25,0,2400,0,600,0,8192,-600,0\nsC,14,1567,2600,1967,643,0,6019,-961,-211\nsC,26,1967,2100,4107,525,-29,4509,-535,0\nsC,33,2267,4066,0,1017,0,5566,-1017,0\nsC,25,2400,1833,8192,468,0,2177,-697,1198\nsC,32,3733,2500,4728,625,0,4081,-625,0\nsC,27,4000,2133,0,533,0,2445,-533,0\nsC,26,4067,2533,4509,633,0,6145,-633,0\nsC,14,4167,1966,6019,745,163,2722,-498,0\nsC,25,4233,2467,2177,904,-1554,2571,-607,0\nsC,14,6133,1367,2722,342,0,7605,-342,0\nsC,27,6133,2267,2445,567,0,8192,-567,0\nsC,32,6233,1534,4081,383,0,4483,-383,0\nsC,33,6333,1167,5566,292,0,0,-292,0\nsC,26,6600,8567,6145,2142,0,3100,-2142,0\nsC,25,6700,1633,2571,408,0,0,-408,0\nsC,14,7500,6400,7605,1600,0,8192,-1600,0\nsC,33,7500,5733,0,1433,0,0,-1433,0\nsC,32,7767,6466,4483,1617,0,5314,-1617,0\nsC,25,8333,4867,0,1217,0,0,-1217,0\nsC,27,8400,5933,8192,1483,0,0,-1483,0\nsC,25,13200,2733,0,683,0,0,-683,0\nsC,33,13233,2967,0,742,0,0,-742,0\nsC,14,13900,2767,8192,692,0,4283,-692,0\nsC,32,14233,2634,5314,658,0,4358,-658,0\nsC,27,14333,5667,0,1417,0,2212,-1417,0\nsC,26,15167,1566,3100,392,0,6246,-392,0\nsC,25,15933,2067,0,517,0,1690,-517,0\nsC,33,16200,2300,0,575,0,3200,-575,0\nsC,14,16667,3300,4283,825,0,7882,-825,0\nsC,26,16733,2367,6246,592,0,4584,-592,0\nsC,32,16867,3133,4358,783,0,3441,-783,0\nsC,25,18000,2000,1690,500,0,0,-500,0\nsC,33,18500,1500,3200,375,0,5816,-375,0\nsC,26,19100,900,4584,225,0,4685,-225,0\nsC,14,19967,1166,7882,292,0,7882,-292,0\nsC,25,20000,3667,0,917,0,7302,-917,0\nsC,33,20000,3900,5816,975,0,0,-975,0\nsC,32,20000,3167,3441,792,0,8192,-792,0\nsC,27,20000,2633,2212,658,0,281,-658,0\nsC,26,20000,3067,4685,767,0,633,-767,0\nsC,14,21133,1434,7882,358,0,960,-358,0\nsC,14,22567,1300,960,325,0,1967,-325,0\nsC,27,22633,1034,281,258,0,0,-258,0\nsC,26,23067,833,633,208,0,1413,-208,0\nsC,32,23167,900,8192,225,0,6926,-225,0\nsC,27,23667,2366,0,614,0,4157,-904,-405\nsC,25,23667,2300,7302,597,0,1011,-879,1300\nsC,14,23867,1900,1967,497,0,6849,-726,-933\nsC,33,23900,2167,0,567,0,5516,-828,-997\nsC,26,23900,6100,1413,1525,0,4669,-1525,0\nsC,32,24067,1833,6926,483,0,2823,-701,416\nsC,14,25767,4233,6849,1511,1940,8192,-1033,0\nsC,32,25900,4100,2823,1448,-859,4096,-998,0\nsC,25,25967,4033,1011,1452,-2148,0,-986,0\nsC,27,26033,3967,4157,1428,640,4096,-970,0\nsC,33,26067,3933,5516,1401,1687,4096,-959,0\n\n";
    const char *const ANIM_3_DATAARRAY[] PROGMEM = {ANIM_3_DATA0};
    const char ANIM_3_LOOP[] PROGMEM = "sC,32,30000,30,4096,15,0,3475,-15,0\nsC,26,30000,0,4669,0,0,4681,0,0\n";
    const uint16_t ANIM_3_CONFIG[] PROGMEM = {0, 0, 0, 0, 0, 0, 0, 0};

    // animation 4, "loop parlato"
    const char ANIM_4_DATA0[] PROGMEM = "sC,26,0,1967,4681,492,0,4107,-492,27\nsC,27,0,4000,4096,1000,0,0,-1000,0\nsC,14,0,1567,8192,392,0,1967,-392,0\nsC,32,0,3667,3475,917,0,5063,-917,0\nsC,33,0,3333,4096,833,0,1035,-833,0\nsC,25,0,3733,0,933,0,306,-933,0\nsC,14,1567,2600,1967,650,0,6019,-961,-211\nsC,26,1967,2100,4107,525,-29,4509,-535,0\nsC,33,3333,3000,1035,750,0,5566,-750,0\nsC,32,3667,2566,5063,642,0,4081,-642,0\nsC,25,3733,2967,306,742,0,2571,-742,0\nsC,27,4000,2133,0,533,0,2445,-533,0\nsC,26,4067,2533,4509,633,0,6145,-633,0\nsC,14,4167,1966,6019,745,163,2722,-498,0\nsC,27,6133,2400,2445,600,0,8192,-600,0\nsC,14,6133,1367,2722,342,0,7605,-342,0\nsC,32,6233,1534,4081,383,0,4483,-383,0\nsC,33,6333,1167,5566,292,0,0,-292,0\nsC,26,6600,8567,6145,2142,0,3100,-2142,0\nsC,25,6700,1633,2571,408,0,0,-408,0\nsC,33,7500,5867,0,1467,0,4811,-1467,0\nsC,14,7500,6367,7605,1592,0,7982,-1592,0\nsC,32,7767,6466,4483,1617,0,5314,-1617,0\nsC,25,8333,4334,0,1083,0,1034,-1083,0\nsC,27,8533,5800,8192,1450,0,0,-1450,0\nsC,25,12667,3266,1034,817,0,0,-817,0\nsC,33,13367,2833,4811,708,0,0,-708,0\nsC,14,13867,2066,7982,517,0,8192,-517,0\nsC,32,14233,2234,5314,558,0,3700,-558,0\nsC,27,14333,5667,0,1417,0,2212,-1417,0\nsC,26,15167,1566,3100,392,0,6246,-392,0\nsC,25,15933,2067,0,517,0,1690,-517,0\nsC,14,15933,1867,8192,477,0,7813,-710,72\nsC,33,16200,2300,0,575,0,3200,-575,0\nsC,32,16467,3533,3700,883,0,3441,-883,0\nsC,26,16733,2367,6246,592,0,4584,-592,0\nsC,14,17800,2167,7813,793,-80,7882,-533,0\nsC,25,18000,2000,1690,500,0,0,-500,0\nsC,33,18500,1500,3200,375,0,5816,-375,0\nsC,26,19100,900,4584,225,0,4685,-225,0\nsC,14,19967,1166,7882,292,0,7882,-292,0\nsC,26,20000,4100,4685,1071,0,7813,-1567,-872\nsC,25,20000,8033,0,1948,0,0,-2685,0\nsC,33,20000,2733,5816,756,0,0,-1036,777\nsC,32,20000,1233,3441,318,0,8192,-470,-991\nsC,27,20000,2600,2212,650,0,8192,-650,0\nsC,14,21133,1634,7882,408,0,3548,-408,0\nsC,32,21233,134,8192,44,93,6004,-45,-56\nsC,32,21367,633,6004,210,263,6137,-209,129\nsC,32,22000,700,6137,235,-145,4588,-229,-5804\nsC,27,22600,2067,8192,598,0,8192,-768,-994\nsC,32,22700,933,4588,313,7937,7013,-309,-4538\nsC,33,22733,5200,0,1619,-1214,6404,-1743,-415\nsC,14,22767,1166,3548,329,0,8192,-439,-1621\nsC,32,23633,1334,7013,448,6587,6937,-441,6\nsC,14,23933,1267,8192,404,1491,6251,-437,0\nsC,26,24100,1367,7813,449,250,7927,-460,0\nsC,27,24667,3933,8192,1174,1520,1225,-1372,375\nsC,32,24967,1233,6937,414,-6,7318,-408,-9093\nsC,14,25200,3533,6251,1148,0,6937,-1156,2485\nsC,26,25467,3066,7927,1041,0,1643,-974,693\nsC,32,26200,2933,7318,926,20480,0,-988,2448\nsC,33,27933,667,6404,224,53,0,-221,-43\nsC,25,28033,1934,0,664,0,0,-623,-2913\nsC,26,28533,1800,1643,623,-443,0,-574,-695\nsC,33,28600,1500,0,509,99,8192,-489,29\nsC,27,28600,667,1225,225,-61,8192,-218,-111\nsC,14,28733,1300,6937,439,-943,8192,-427,645\nsC,32,29133,800,0,268,-665,8192,-265,-689\nsC,27,29267,2266,8192,814,415,0,-677,-849\nsC,32,29933,900,8192,317,825,7623,-298,-79\nsC,25,29967,633,0,220,1028,0,-202,52\nsC,14,30033,934,8192,333,-502,8192,-285,-1557\nsC,33,30100,1600,8192,537,-32,0,-505,-1740\nsC,26,30333,1667,0,620,752,4685,-481,0\nsC,25,30600,1400,0,505,-129,0,-426,0\nsC,32,30833,567,7623,190,50,5414,-175,-504\nsC,14,30967,1033,8192,376,2056,8192,-310,0\nsC,32,31400,600,5414,219,629,3852,-179,0\nsC,27,31533,467,0,170,213,4096,-140,0\nsC,33,31700,300,0,110,380,4096,-88,0\n\n";
    const char *const ANIM_4_DATAARRAY[] PROGMEM = {ANIM_4_DATA0};
    const char ANIM_4_LOOP[] PROGMEM = "sC,32,32000,18,3852,9,0,3475,-9,0\nsC,26,32000,0,4685,0,0,4681,0,0\n";
    const uint16_t ANIM_4_CONFIG[] PROGMEM = {0, 0, 0, 0, 0, 0, 0, 0};

    // animation 5, "sarlac"
    const char ANIM_5_DATA0[] PROGMEM = "sC,32,0,3667,3475,917,0,5063,-917,0\nsC,14,0,1567,8192,392,0,1967,-392,0\nsC,26,0,1967,4681,492,0,4107,-492,27\nsC,27,0,4000,4096,1000,0,0,-1000,0\nsC,33,0,3033,4096,758,0,0,-758,0\nsC,25,0,3533,0,883,0,8192,-883,0\nsC,14,1567,2600,1967,650,0,6019,-961,-211\nsC,26,1967,2100,4107,525,-29,4509,-535,0\nsC,33,3033,2300,0,575,0,0,-575,0\nsC,25,3533,2167,8192,542,0,0,-542,0\nsC,32,3667,2566,5063,642,0,4081,-642,0\nsC,27,4000,1600,0,400,0,6595,-400,0\nsC,26,4067,2266,4509,567,0,5642,-567,0\nsC,14,4167,1966,6019,745,163,2722,-498,0\nsC,33,5333,2167,0,542,0,0,-542,0\nsC,27,5600,2567,6595,642,0,1720,-642,0\nsC,25,5700,2633,0,658,0,0,-658,0\nsC,14,6133,634,2722,155,0,5985,-228,-1042\nsC,32,6233,1534,4081,383,0,4483,-383,0\nsC,26,6333,8834,5642,2208,0,3100,-2208,0\nsC,14,6767,400,5985,140,640,4195,-125,-425\nsC,14,7167,300,4195,112,383,7318,-86,0\nsC,14,7467,6400,7318,1600,0,7982,-1600,0\nsC,33,7500,2500,0,625,0,0,-625,0\nsC,32,7767,6466,4483,1617,0,5314,-1617,0\nsC,27,8167,6166,1720,1542,0,0,-1542,0\nsC,25,8333,1800,0,450,0,7433,-450,0\nsC,33,10000,6200,0,1550,0,0,-1550,0\nsC,25,10133,5800,7433,1450,0,0,-1450,0\nsC,14,13867,2800,7982,700,0,4283,-700,0\nsC,32,14233,2234,5314,558,0,3700,-558,0\nsC,27,14333,5667,0,1417,0,2212,-1417,0\nsC,26,15167,1566,3100,392,0,6246,-392,0\nsC,25,15933,934,0,233,0,3281,-233,0\nsC,33,16200,2300,0,575,0,3200,-575,0\nsC,32,16467,3533,3700,883,0,3441,-883,0\nsC,14,16667,3300,4283,825,0,7882,-825,0\nsC,26,16733,2367,6246,592,0,4584,-592,0\nsC,25,16867,1666,3281,417,0,43,-417,0\nsC,33,18500,1500,3200,375,0,5816,-375,0\nsC,25,18533,7467,43,1810,0,0,-1867,0\nsC,26,19100,900,4584,225,0,4685,-225,0\nsC,14,19967,1166,7882,292,0,7882,-292,0\nsC,26,20000,5467,4685,1378,0,7927,-2065,0\nsC,33,20000,2733,5816,756,0,0,-1036,777\nsC,32,20000,1233,3441,318,0,8192,-470,-991\nsC,27,20000,2633,2212,658,0,281,-658,0\nsC,14,21133,1434,7882,358,0,960,-358,0\nsC,32,21233,134,8192,44,93,6004,-45,-56\nsC,32,21367,633,6004,210,263,6137,-209,129\nsC,32,22000,700,6137,235,-145,4588,-229,-5804\nsC,14,22567,1000,960,294,0,8192,-369,-1547\nsC,27,22633,1800,281,433,0,8192,-665,-983\nsC,32,22700,3300,4588,1105,20480,3441,-825,0\nsC,33,22733,3267,0,1017,-763,4096,-817,0\nsC,14,23567,1566,8192,481,2020,8192,-554,0\nsC,27,24433,1567,8192,596,882,4096,-399,0\nsC,14,25133,867,8192,282,0,8192,-217,0\nsC,26,25467,533,7927,181,0,4669,-133,0\n\n";
    const char *const ANIM_5_DATAARRAY[] PROGMEM = {ANIM_5_DATA0};
    const char ANIM_5_LOOP[] PROGMEM = "sC,32,26000,2,3441,1,0,3475,-1,0\nsC,26,26000,0,4669,0,0,4681,0,0\n";
    const uint16_t ANIM_5_CONFIG[] PROGMEM = {0, 0, 0, 0, 0, 0, 0, 0};

    // animation 6, "rancor"
    const char ANIM_6_DATA0[] PROGMEM = "sC,33,0,1000,5851,257,0,5452,-246,0\nsC,25,0,1000,0,285,0,82,-350,1560\nsC,32,0,2333,3475,583,0,3475,-583,0\nsC,27,0,1000,4096,257,0,4096,-246,0\nsC,14,0,433,8192,123,0,7889,-162,0\nsC,26,0,2333,4681,583,0,4681,-583,0\nsC,14,433,534,7889,164,0,7660,-186,-762\nsC,14,967,1366,7660,503,2053,8192,-337,0\nsC,27,1000,1333,4096,333,0,4096,-333,0\nsC,33,1000,1333,5452,333,0,5816,-333,0\nsC,25,1000,1333,82,489,-2182,0,-328,0\n\n";
    const char *const ANIM_6_DATAARRAY[] PROGMEM = {ANIM_6_DATA0};
    const char ANIM_6_LOOP[] PROGMEM = "sC,33,2333,2,5816,1,0,5851,-1,0\n";
    const uint16_t ANIM_6_CONFIG[] PROGMEM = {0, 0, 0, 0, 0, 0, 0, 0};

    // animation 7, "Prova"
    const char ANIM_7_DATA0[] PROGMEM = "\n";
    const char *const ANIM_7_DATAARRAY[] PROGMEM = {ANIM_7_DATA0};
    const char ANIM_7_LOOP[] PROGMEM = "";
    const uint16_t ANIM_7_CONFIG[] PROGMEM = {0, 0, 0, 0, 0, 0, 0, 0};


    // configs
    const uint16_t *const CONFIGS_ARRAY[] PROGMEM = {ANIM_0_CONFIG, ANIM_1_CONFIG, ANIM_2_CONFIG, ANIM_3_CONFIG, ANIM_4_CONFIG, ANIM_5_CONFIG, ANIM_6_CONFIG, ANIM_7_CONFIG};

    CommandStream *GenerateSetupCommandStream()
    {
        return new CommandStream(new CodeCommandStreamDataSource(SETUP_DATAARRAY, 1));
    }

    CommandStream *GenerateCommandStreamByIndex(byte animationIndex)
    {
        switch (animationIndex)
        {
        case 0:
            return new CommandStream(new CodeCommandStreamDataSource(ANIM_0_DATAARRAY, 1, ANIM_0_LOOP));
        case 1:
            return new CommandStream(new CodeCommandStreamDataSource(ANIM_1_DATAARRAY, 1, ANIM_1_LOOP));
        case 2:
            return new CommandStream(new CodeCommandStreamDataSource(ANIM_2_DATAARRAY, 1, ANIM_2_LOOP));
        case 3:
            return new CommandStream(new CodeCommandStreamDataSource(ANIM_3_DATAARRAY, 1, ANIM_3_LOOP));
        case 4:
            return new CommandStream(new CodeCommandStreamDataSource(ANIM_4_DATAARRAY, 1, ANIM_4_LOOP));
        case 5:
            return new CommandStream(new CodeCommandStreamDataSource(ANIM_5_DATAARRAY, 1, ANIM_5_LOOP));
        case 6:
            return new CommandStream(new CodeCommandStreamDataSource(ANIM_6_DATAARRAY, 1, ANIM_6_LOOP));
        case 7:
            return new CommandStream(new CodeCommandStreamDataSource(ANIM_7_DATAARRAY, 1, ANIM_7_LOOP));

        }
        return nullptr;
    }

    byte getAnimationCount()
    {
        return 8;
    }

    const uint16_t *getConfigValues(uint8_t animationIndex)
    {
        // AVR Needs to move it to sram    
#if defined(ARDUINO_ARCH_AVR)
#define CONFIG_SIZE 8

        static uint16_t copy[CONFIG_SIZE];
        const uint16_t *flashPtr =
            (const uint16_t *)pgm_read_word_near(&CONFIGS_ARRAY[animationIndex]);

        for (uint8_t i = 0; i < CONFIG_SIZE; i++)
        {
            copy[i] = pgm_read_word_near(&flashPtr[i]);
        }
        return copy;
#else
        // Everything else can use normal accessing
        return CONFIGS_ARRAY[animationIndex];
#endif
    }
}
